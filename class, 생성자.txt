class Car {	//클래스
    var color : String = ""
    var speed : Int = 0
    
    fun upSpeed(value: Int){
        if(speed+value >= 200)
     	   speed = 200
        else
      	  speed = speed + value
        
    }
    fun downSpeed(value: Int){
        if(speed-value <=0)
      	  speed = 0;
        else
     	   speed = speed-value
    }
} 

fun main() {
    
    var myCar1 : Car = Car()	//자바에서 쓰는 new 연산자만 빠졌다.
    
    myCar1.color = "빨강"
    myCar1.speed = 0
   
    
    var myCar2 : Car = Car()
    myCar2.color = "파랑"
    myCar2.speed = 0
    
    var myCar3: Car = Car()
    myCar3.color = "초록"
    myCar3.speed = 0
    
    myCar1.upSpeed(50)
    println("자동차1의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")
    
    myCar2.upSpeed(20)
    println("자동차2의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")
    
    myCar3.upSpeed(250)
    println("자동차3의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")
}
   



class Car {	//클래스
    var color : String = ""
    var speed : Int = 0
    
    constructor(color: String, speed: Int) {
        this.color = color
        this.speed = speed
    }
    
    fun upSpeed(value: Int){
        if(speed+value >= 200)
     	   speed = 200
        else
      	  speed = speed + value
        
    }
    fun downSpeed(value: Int){
        if(speed-value <=0)
      	  speed = 0;
        else
     	   speed = speed-value
    }
} 




    class Car {	//생성자를 사용해서 나타내기
        var color : String = ""
        var speed : Int = 0

        constructor(color: String, speed: Int) {
            this.color = color
            this.speed = speed
        }

        fun upSpeed(value: Int){
            if(speed+value >= 200)
               speed = 200
            else
              speed = speed + value

        }
        fun downSpeed(value: Int){
            if(speed-value <=0)
              speed = 0;
            else
               speed = speed-value
        }
    } 

    fun main() {

        var myCar1 : Car = Car("빨강",0)
        var myCar2 : Car = Car("파랑",0)
        var myCar3 : Car = Car("초록",0)

        myCar1.upSpeed(50)
        println("자동차1의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")

        myCar2.upSpeed(20)
        println("자동차2의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")

        myCar3.upSpeed(250)
        println("자동차3의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")
    }
   
    

    
    
        class Car {	//클래스
        var color : String = ""
        var speed : Int = 0

        constructor(color: String, speed: Int) {
            this.color = color
            this.speed = speed
        }
        
        constructor(speed: Int){  	//constructor 생성자	
            //메소드 오버로딩(한 클래스 내에서 메소드의 이름이 같아도 파라미터의 개수나 데이터 형식만 다르면 여러개를 선언 할 수 있다)
            this.speed = speed
        }
        constructor(){
            
        }

        fun upSpeed(value: Int){
            if(speed+value >= 200)
               speed = 200
            else
              speed = speed + value

        }
        fun downSpeed(value: Int){
            if(speed-value <=0)
              speed = 0;
            else
               speed = speed-value
        }
    } 

    fun main() {

        var myCar1 : Car = Car("빨강",0)	//생성자에서 초기화를 같이함 
        
        var myCar2 : Car = Car(0)
        myCar2.color="분홍"
        
        var myCar3 : Car = Car("초록",0)

        myCar1.upSpeed(50)
        println("자동차1의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")

        myCar2.upSpeed(20)
        println("자동차2의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")

        myCar3.upSpeed(250)
        println("자동차3의 색상은"+myCar1.color+"이며, 속도는"+myCar1.speed +"KM 입니다")
    }
   
    

    
    
    
    
    
    
      
    
    
    
      